pro1;

public class MethodOverloadingExample {

    // Overloaded method to add two integers
    public int add(int a, int b) {
        return a + b;
    }

    // Overloaded method to add three integers
    public int add(int a, int b, int c) {
        return a + b + c;
    }

    // Overloaded method to add two double values
    public double add(double a, double b) {
        return a + b;
    }

    public static void main(String[] args) {
        MethodOverloadingExample obj = new MethodOverloadingExample();

        // Calling the method with two integer arguments
        int sumTwoInts = obj.add(10, 20);
        System.out.println("Sum of two integers (10 + 20): " + sumTwoInts);

        // Calling the method with three integer arguments
        int sumThreeInts = obj.add(10, 20, 30);
        System.out.println("Sum of three integers (10 + 20 + 30): " + sumThreeInts);

        // Calling the method with two double arguments
        double sumTwoDoubles = obj.add(10.5, 20.5);
        System.out.println("Sum of two doubles (10.5 + 20.5): " + sumTwoDoubles);
    }
}
pro2

import java.util.Scanner;

public class FactorialRecursive {

    // Recursive method to calculate factorial
    public static int factorial(int n) {
        // Base case: factorial of 0 or 1 is 1
        if (n == 0 || n == 1) {
            return 1;
        }
        // Recursive case: n * factorial of (n-1)
        return n * factorial(n - 1);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Ask user for input
        System.out.print("Enter a number: ");
        int num = scanner.nextInt();

        // Calculate the factorial using the recursive method
        int result = factorial(num);

        // Display the result
        System.out.println("The factorial of " + num + " is: " + result);

        // Close the scanner
        scanner.close();
    }
}